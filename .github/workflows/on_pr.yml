name: Tests and builds on PR
on:
  pull_request:
    branches:
      - main
      - v*.*-*
    types: [opened, reopened, ready_for_review, converted_to_draft]
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.editorconfig'
      - 'scripts/**'
      - '.github//**'
      - '!.github/workflows/on_push.yml'
      - '!.github/workflows/coverage.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ensure_submodule_sanity:
    name: Make sure we're not building with a fork
    runs-on: ubuntu-latest
    steps:
      - name: Checkout DuckDB Python
        uses: actions/checkout@v4

      - shell: bash
        run: |
          submodule_url=$(git config --file .gitmodules --get submodule.external/duckdb.url || true)
          expected="github.com/duckdb/duckdb"
          if [[ -z "$submodule_url" ]]; then
            echo "::error::DuckDB submodule not found in .gitmodules"
            exit 1
          fi
          if [[ "$submodule_url" != *"$expected"* ]]; then
            echo "::error::DuckDB submodule must point to $expected, found: $submodule_url"
            exit 1
          fi

  packaging_test:
    name: Build a minimal set of packages and run all tests on them
    needs: ensure_submodule_sanity
    # Skip packaging tests for draft PRs
    if: ${{ github.event_name != 'pull_request' || github.event.pull_request.draft == false }}
    uses: ./.github/workflows/packaging.yml
    with:
      minimal: true
      testsuite: all
      duckdb-git-ref: ${{ github.base_ref }}

  coverage_test:
    name: Run coverage tests
    needs: ensure_submodule_sanity
    # Only run coverage test for draft PRs
    if: ${{ github.event_name == 'pull_request' && github.event.pull_request.draft == true }}
    uses: ./.github/workflows/coverage.yml
    with:
      duckdb_git_ref: ${{ github.base_ref }}
      testsuite: all
